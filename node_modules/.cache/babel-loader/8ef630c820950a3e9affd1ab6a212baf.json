{"ast":null,"code":"import{GET_USERS,USER_UPDATED,ERR}from'../constants/action-types';import RANDOM_USER from'../samples_users';export function getUserData(){return function(dispatch){return fetch(\"https://ti-react-test.herokuapp.com/users\").then(function(response){return response.json();}).then(function(json){dispatch({type:GET_USERS,payload:json});});};}export default function editUserData(id){return function(dispatch){return fetch(\"https://ti-react-test.herokuapp.com/users/\"+id+\"\",{method:'PATCH',body:JSON.stringify(RANDOM_USER[parseInt(Math.random()*10)]),headers:{\"Content-type\":\"application/json; charset=UTF-8\"}}).then(function(response){return response.json();}).then(function(json){dispatch({type:USER_UPDATED});}).catch(function(error){dispatch({type:ERR,payload:null});});};}","map":{"version":3,"sources":["C:/Users/Anon/ReduxApp/src/actions/index.js"],"names":["GET_USERS","USER_UPDATED","ERR","RANDOM_USER","getUserData","dispatch","fetch","then","response","json","type","payload","editUserData","id","method","body","JSON","stringify","parseInt","Math","random","headers","catch","error"],"mappings":"AAAA,OAAQA,SAAR,CAAkBC,YAAlB,CAA+BC,GAA/B,KAAyC,2BAAzC,CAGA,MAAOC,CAAAA,WAAP,KAAwB,kBAAxB,CAGA,MAAO,SAASC,CAAAA,WAAT,EAAuB,CAC5B,MAAO,UAASC,QAAT,CAAkB,CACzB,MAAOC,CAAAA,KAAK,CAAC,2CAAD,CAAL,CACJC,IADI,CACC,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EADT,EAEJF,IAFI,CAEC,SAAAE,IAAI,CAAI,CACZJ,QAAQ,CAAC,CAAEK,IAAI,CAAEV,SAAR,CAAmBW,OAAO,CAAEF,IAA5B,CAAD,CAAR,CACD,CAJI,CAAP,CAKC,CAND,CAOD,CAGD,cAAe,SAASG,CAAAA,YAAT,CAAsBC,EAAtB,CAA0B,CAEvC,MAAO,UAASR,QAAT,CAAkB,CAEzB,MAAOC,CAAAA,KAAK,CAAC,6CAA6CO,EAA7C,CAAgD,EAAjD,CAAoD,CACtDC,MAAM,CAAE,OAD8C,CAEtDC,IAAI,CAAEC,IAAI,CAACC,SAAL,CACJd,WAAW,CAACe,QAAQ,CAACC,IAAI,CAACC,MAAL,GAAc,EAAf,CAAT,CADP,CAFgD,CAKtDC,OAAO,CAAC,CACN,eAAgB,iCADV,CAL8C,CAApD,CAAL,CAWJd,IAXI,CAWC,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EAXT,EAYJF,IAZI,CAYC,SAAAE,IAAI,CAAI,CACXJ,QAAQ,CAAC,CAAEK,IAAI,CAAET,YAAR,CAAD,CAAR,CACF,CAdI,EAeJqB,KAfI,CAeE,SAAAC,KAAK,CAAI,CACZlB,QAAQ,CAAC,CAAEK,IAAI,CAAER,GAAR,CAAaS,OAAO,CAAE,IAAtB,CAAD,CAAR,CACH,CAjBI,CAAP,CAkBC,CApBD,CAqBD","sourcesContent":["import {GET_USERS,USER_UPDATED,ERR} from '../constants/action-types';\r\n\r\n\r\nimport RANDOM_USER from '../samples_users';\r\n\r\n\r\nexport function getUserData() {\r\n  return function(dispatch){\r\n  return fetch(\"https://ti-react-test.herokuapp.com/users\")\r\n    .then(response => response.json())\r\n    .then(json => {\r\n      dispatch({ type: GET_USERS, payload: json });\r\n    });\r\n  };\r\n}\r\n\r\n\r\nexport default function editUserData(id) {\r\n\r\n  return function(dispatch){\r\n\r\n  return fetch(\"https://ti-react-test.herokuapp.com/users/\"+id+\"\",{\r\n            method: 'PATCH',\r\n            body: JSON.stringify(\r\n              RANDOM_USER[parseInt(Math.random()*10)]\r\n            ),\r\n            headers:{\r\n              \"Content-type\": \"application/json; charset=UTF-8\"\r\n            }\r\n          })\r\n\r\n\r\n    .then(response => response.json())\r\n    .then(json => {\r\n       dispatch({ type: USER_UPDATED});\r\n    })\r\n    .catch(error => {\r\n        dispatch({ type: ERR, payload: null });\r\n    });\r\n  };\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}