{"ast":null,"code":"import{GET_USERS,USER_UPDATED,ERR}from'../constants/action-types';var initialState={type:GET_USERS,users:[]};function rootReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;if(action.type===GET_USERS){return Object.assign({},state,{users:state.users.concat(action.payload)});}if(action.type===USER_UPDATED){return Object.assign({},state,{users:state.users.concat(action.payload)});}if(action.type===ERR){var err_msg={name:\"NO DATA\",bio:'NO DATA',occupation:'NO DATA',email:'NO DATA'};return Object.assign({},state,{users:state.users.concat(err_msg)});}return state;};export default rootReducer;","map":{"version":3,"sources":["C:/Users/Anon/ReduxApp/src/reducers/index.js"],"names":["GET_USERS","USER_UPDATED","ERR","initialState","type","users","rootReducer","state","action","Object","assign","concat","payload","err_msg","name","bio","occupation","email"],"mappings":"AAAA,OAAQA,SAAR,CAAkBC,YAAlB,CAA+BC,GAA/B,KAAyC,2BAAzC,CAEA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,IAAI,CAACJ,SADc,CAEnBK,KAAK,CAAE,EAFY,CAArB,CAMA,QAASC,CAAAA,WAAT,EAAmD,IAA9BC,CAAAA,KAA8B,2DAAtBJ,YAAsB,IAARK,CAAAA,MAAQ,2CAEjD,GAAIA,MAAM,CAACJ,IAAP,GAAgBJ,SAApB,CAA+B,CAC7B,MAAOS,CAAAA,MAAM,CAACC,MAAP,CAAc,EAAd,CAAkBH,KAAlB,CAAyB,CAC9BF,KAAK,CAAEE,KAAK,CAACF,KAAN,CAAYM,MAAZ,CAAmBH,MAAM,CAACI,OAA1B,CADuB,CAAzB,CAAP,CAGD,CAED,GAAGJ,MAAM,CAACJ,IAAP,GAAgBH,YAAnB,CAAgC,CAC/B,MAAOQ,CAAAA,MAAM,CAACC,MAAP,CAAc,EAAd,CAAkBH,KAAlB,CAAyB,CAC7BF,KAAK,CAAEE,KAAK,CAACF,KAAN,CAAYM,MAAZ,CAAmBH,MAAM,CAACI,OAA1B,CADsB,CAAzB,CAAP,CAIA,CAED,GAAGJ,MAAM,CAACJ,IAAP,GAAgBF,GAAnB,CAAuB,CAErB,GAAMW,CAAAA,OAAO,CAAC,CAEZC,IAAI,CAAC,SAFO,CAGZC,GAAG,CAAC,SAHQ,CAIZC,UAAU,CAAC,SAJC,CAKZC,KAAK,CAAC,SALM,CAAd,CAQE,MAAOR,CAAAA,MAAM,CAACC,MAAP,CAAc,EAAd,CAAkBH,KAAlB,CAAyB,CAChCF,KAAK,CAAEE,KAAK,CAACF,KAAN,CAAYM,MAAZ,CAAmBE,OAAnB,CADyB,CAAzB,CAAP,CAGH,CACD,MAAON,CAAAA,KAAP,CACD,EAED,cAAeD,CAAAA,WAAf","sourcesContent":["import {GET_USERS,USER_UPDATED,ERR} from '../constants/action-types';\r\n\r\nconst initialState = {\t\r\n  type:GET_USERS,\r\n  users: []\r\n};\r\n\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n\r\n  if (action.type === GET_USERS) {\r\n    return Object.assign({}, state, {\r\n      users: state.users.concat(action.payload)\r\n    });\r\n  }\r\n\r\n  if(action.type === USER_UPDATED){\r\n  \treturn Object.assign({}, state, {\r\n      users: state.users.concat(action.payload)\r\n    });\r\n    \r\n  }\r\n\r\n  if(action.type === ERR){\r\n\r\n    const err_msg={\r\n\r\n      name:\"NO DATA\",\r\n      bio:'NO DATA',\r\n      occupation:'NO DATA',\r\n      email:'NO DATA'\r\n    };\r\n\r\n      return Object.assign({}, state, {\r\n      users: state.users.concat(err_msg)\r\n    });\r\n  }\r\n  return state;\r\n};\r\n\r\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}