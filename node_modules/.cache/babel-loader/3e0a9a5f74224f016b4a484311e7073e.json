{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anon\\\\ui-app\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport getUsers from './actions/index';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { connect } from \"react-redux\";\nimport store from './js/store/index';\n\nclass AppList extends React.Component {\n  // constructor(props){\n  //   super(props);\n  //   this.state = {\n  // \t\t\tusers:[]\n  // \t\t};\n  // }   \n  // componentDidMount() {\n  // \tfetch(\"https://ti-react-test.herokuapp.com/users\")\n  // \t     .then(res => res.json())\n  // \t     .then((response) => {\n  // \t         this.setState({\n  // \t           users:response\n  // \t         });\n  // \t\t\t})\n  // \t     .catch(err => {\n  // \t     \t this.setState({\n  // \t     \t \tusers:[],\n  // \t     \t \terror:err\n  // \t     \t });\n  // \t     });\n  // }\n  // const mapStateToProps = state => {\n  // \treturn {users:state.users};\n  // };\n  render() {\n    // const userList = this.state.users.map((item) => (\n    React.createElement(Provider, {\n      store: store,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(App, {\n      key: this.props.id,\n      user_id: item.id,\n      name: item.name,\n      job: item.occupation,\n      email: item.email,\n      bio: item.bio,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })); // ));\n\n    return React.createElement(\"div\", {\n      id: \"list_div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, userList);\n  }\n\n}\n\nexport default connect(null, {\n  getUsers\n})(AppList); // ReactDOM.render(<AppList/>, document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/Anon/ui-app/src/index.js"],"names":["React","ReactDOM","App","createStore","applyMiddleware","compose","getUsers","render","Provider","connect","store","AppList","Component","props","id","item","name","occupation","email","bio","userList"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,SAAQC,MAAR,QAAqB,WAArB;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;;AAIA,MAAMC,OAAN,SAAsBX,KAAK,CAACY,SAA5B,CAAqC;AAGrC;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEAL,EAAAA,MAAM,GAAE;AAEP;AAEI,wBAAC,QAAD;AAAU,MAAA,KAAK,EAAEG,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,GAAD;AACG,MAAA,GAAG,EAAE,KAAKG,KAAL,CAAWC,EADnB;AAEG,MAAA,OAAO,EAAEC,IAAI,CAACD,EAFjB;AAGG,MAAA,IAAI,EAAEC,IAAI,CAACC,IAHd;AAIG,MAAA,GAAG,EAAED,IAAI,CAACE,UAJb;AAKG,MAAA,KAAK,EAAEF,IAAI,CAACG,KALf;AAMG,MAAA,GAAG,EAAEH,IAAI,CAACI,GANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAJG,CAeN;;AAEC,WACG;AAAK,MAAA,EAAE,EAAC,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEC,QADF,CADH;AAOF;;AA5DoC;;AA8DrC,eAAeX,OAAO,CACpB,IADoB,EAEpB;AAAEH,EAAAA;AAAF,CAFoB,CAAP,CAGbK,OAHa,CAAf,C,CAIA","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport getUsers from './actions/index';\nimport {render} from 'react-dom';\nimport {Provider} from 'react-redux';\nimport { connect } from \"react-redux\";\nimport store from './js/store/index';\n\n\n\nclass AppList extends React.Component{\n\n\n// constructor(props){\n//   super(props);\n//   this.state = {\n// \t\t\tusers:[]\n// \t\t};\n\t\n// }   \n\n// componentDidMount() {\n\n// \tfetch(\"https://ti-react-test.herokuapp.com/users\")\n// \t     .then(res => res.json())\n// \t     .then((response) => {\n\n// \t         this.setState({\n// \t           users:response\n// \t         });\n\n// \t\t\t})\n// \t     .catch(err => {\n\n// \t     \t this.setState({\n// \t     \t \tusers:[],\n// \t     \t \terror:err\n// \t     \t });\n\n// \t     });\n// }\n\n// const mapStateToProps = state => {\n// \treturn {users:state.users};\n// };\n\nrender(){\n\n // const userList = this.state.users.map((item) => (\n   \n     <Provider store={store}>\n     <App\n        key={this.props.id}\n        user_id={item.id}\n        name={item.name}\n        job={item.occupation}\n        email={item.email}\n        bio={item.bio}\n     />\n     </Provider>\n\n \t// ));\n\n   return(\n      <div id='list_div'>\n       {userList}\n      </div>\n\n\n   \t);\n}\n}\nexport default connect(\n  null,\n  { getUsers }\n)(AppList);\n// ReactDOM.render(<AppList/>, document.getElementById('root'));\n\n\n"]},"metadata":{},"sourceType":"module"}